!function(e,r){for(var t in r)e[t]=r[t]}(self,function(e){var r={};function t(o){if(r[o])return r[o].exports;var n=r[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,t),n.l=!0,n.exports}return t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)t.d(o,n,function(r){return e[r]}.bind(null,n));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=201)}({201:function(e,r,t){"use strict";t.r(r),t.d(r,"initSW",function(){return o}),t.d(r,"Page",function(){return n});let o=t(202),n=t(203)},202:function(e,r){if("serviceWorker"in navigator){let e=window.location.origin+window.location.pathname;navigator.serviceWorker.register(e+"sw.js",{scope:e}).then(function(e){console.log("Service worker registration succeeded:",e)},function(e){console.log("Service worker registration failed:",e)})}else console.log("Service workers are not supported.")},203:function(e,r,t){"use strict";t.r(r),t.d(r,"ReplayIndex",function(){return o});class o{constructor(){navigator.serviceWorker.addEventListener("message",e=>{switch(e.data.msg_type){case"collAdded":console.log("Collection added: "+e.data.prefix);break;case"listAll":this.addCollections(e.data.colls)}}),new Promise(e=>{if(navigator.serviceWorker.controller)return e();navigator.serviceWorker.addEventListener("controllerchange",r=>e())}).then(()=>{this.init()})}init(){const e=new URLSearchParams(window.location.search);let r=!1;for(let t of e.entries())if(t[0].startsWith("coll_")){r=!0;const e=t[0].slice("coll_".length),o=t[1],n=[{name:o,url:o}];navigator.serviceWorker.controller.postMessage({msg_type:"addColl",name:e,files:n})}r||navigator.serviceWorker.controller.postMessage({msg_type:"listAll"})}processFile(e){navigator.serviceWorker.controller||console.log("No Service Worker!");let r=[];const t=document.querySelector("#coll-name").value;for(let t of e)r.push({name:t.name,url:URL.createObjectURL(t)});navigator.serviceWorker.controller.postMessage({msg_type:"addColl",name:t,files:r})}addCollections(e){document.querySelector("#colls").innerHTML="";for(let r of e)this.addCollection(r)}addCollection(e){let r=`<h3>${e.name}</h3><ul>`;for(let t of e.pageList){let o=e.prefix;t.timestamp&&(o+=t.timestamp+"/"),r+=`<li><a href="${o+=t.url}">${t.title||t.url}</a></li>`}r+="</ul>";let t=document.createElement("div");t.innerHTML=r,document.querySelector("#colls").appendChild(t)}}}}));